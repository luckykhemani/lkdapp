{"dependencies":[{"name":"B:\\nOS\\luckydapp\\package.json","includedInParent":true,"mtime":1527280649000},{"name":"B:\\nOS\\luckydapp\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1531908596697},{"name":"./$.is-object","loc":{"line":2,"column":23}}],"generated":{"js":"// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./$.is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};","map":{"mappings":[{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"..\\node_modules\\core-js\\modules\\$.to-primitive.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}}],"sources":{"..\\node_modules\\core-js\\modules\\$.to-primitive.js":"// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./$.is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};"},"lineCount":12}},"hash":"eca21188521fa1693e6e6c94a1e507e0","cacheData":{"env":{}}}